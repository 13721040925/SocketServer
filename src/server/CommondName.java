package server;


public class CommondName {
	public byte[] getCommond_group(String value) {
		byte[] bt = new byte[2];
		switch (value) {
		case "FF": {
			bt[0] = (byte) 0x46;
			bt[1] = (byte) 0x46;
			break;
		}
		case "01": {
			bt[0] = (byte) 0x30;
			bt[1] = (byte) 0x31;
			break;
		}
		case "02": {
			bt[0] = (byte) 0x30;
			bt[1] = (byte) 0x32;
			break;
		}
		case "03": {
			bt[0] = (byte) 0x30;
			bt[1] = (byte) 0x33;
			break;
		}
		case "04": {
			bt[0] = (byte) 0x30;
			bt[1] = (byte) 0x34;
			break;
		}
		case "05": {
			bt[0] = (byte) 0x30;
			bt[1] = (byte) 0x35;
			break;
		}
		case "06": {
			bt[0] = (byte) 0x30;
			bt[1] = (byte) 0x36;
			break;
		}
		case "07": {
			bt[0] = (byte) 0x30;
			bt[1] = (byte) 0x37;
			break;
		}
		}
		return bt;
	}

	public byte[] getCommond_type(String value) {
		byte[] bt = new byte[2];
		switch (value) {
		case "A1": {
			bt[0] = (byte) 0x41;
			bt[1] = (byte) 0x31;
			break;
		}
		case "A2": {
			bt[0] = (byte) 0x41;
			bt[1] = (byte) 0x32;
			break;
		}
		case "A3": {
			bt[0] = (byte) 0x41;
			bt[1] = (byte) 0x33;
			break;
		}
		case "A4": {
			bt[0] = (byte) 0x41;
			bt[1] = (byte) 0x34;
			break;
		}
		case "A5": {
			bt[0] = (byte) 0x41;
			bt[1] = (byte) 0x35;
			break;
		}
		case "A6": {
			bt[0] = (byte) 0x41;
			bt[1] = (byte) 0x36;
			break;
		}
		}
		return bt;
	}

	public byte[] getCommond_datai(String value) {
		byte[] bt = new byte[2];
		switch (value) {
		case "0": {
			bt[0] = (byte) 0x30;
			bt[1] = (byte) 0x30;
			break;
		}
		case "1": {
			bt[0] = (byte) 0x30;
			bt[1] = (byte) 0x31;
			break;
		}
		case "2": {
			bt[0] = (byte) 0x30;
			bt[1] = (byte) 0x32;
			break;
		}
		case "3": {
			bt[0] = (byte) 0x30;
			bt[1] = (byte) 0x33;
			break;
		}
		case "4": {
			bt[0] = (byte) 0x30;
			bt[1] = (byte) 0x34;
			break;
		}
		case "5": {
			bt[0] = (byte) 0x30;
			bt[1] = (byte) 0x35;
			break;
		}
		case "6": {
			bt[0] = (byte) 0x30;
			bt[1] = (byte) 0x36;
			break;
		}
		}
		return bt;
	}
	public byte[] getRemoteControl(byte[] commond_group, byte[] type, byte[] datai) {
		byte[] bt = { (byte) 0x7E, (byte) 0x32, (byte) 0x30, (byte) 0x30, (byte) 0x31, (byte) 0x34, (byte) 0x37,
				(byte) 0x34, (byte) 0x35, (byte) 0x41, (byte) 0x30, (byte) 0x30, (byte) 0x36, commond_group[0],
				commond_group[1], type[0], type[1], datai[0], datai[1] };
		return Changedegital.getCHKSUM(bt);
	}

	public byte[] xyRemote() {
		byte[] bt = { (byte) 0x7E, (byte) 0x32, (byte) 0x30, (byte) 0x30, (byte) 0x31, (byte) 0x34, (byte) 0x37,
				(byte) 0x30, (byte) 0x30, (byte) 0x31, (byte) 0x30, (byte) 0x30, (byte) 0x30, (byte) 0x46, (byte) 0x44,
				(byte) 0x42, (byte) 0x31, (byte) 0x0D };
		return bt;
	}

	public static byte[] getXyModel() {
		byte[] bt = { (byte) 0x7E, (byte) 0x32, (byte) 0x30, (byte) 0x30, (byte) 0x31, (byte) 0x34, (byte) 0x37,
				(byte) 0x34, (byte) 0x32, (byte) 0x45, (byte) 0x30, (byte) 0x30, (byte) 0x32,
				(byte) 0x46, (byte) 0x46, (byte) 0x46, (byte) 0x44, (byte) 0x30, (byte) 0x39, (byte) 0x0D };
		return bt;
	}
	// 响应模拟量化数据
	public byte[] xyModel() {
		byte[] bt = { (byte) 0x7E, (byte) 0x32, (byte) 0x30, (byte) 0x30, (byte) 0x31, (byte) 0x34, (byte) 0x37,
				(byte) 0x30, (byte) 0x30, (byte) 0x35, (byte) 0x30, (byte) 0x46, (byte) 0x43, (byte) 0x31, (byte) 0x31,

				(byte) 0x30, (byte) 0x43, (byte) 0x34, (byte) 0x45, (byte) 0x34, (byte) 0x38, (byte) 0x42, (byte) 0x34,
				(byte) 0x41, (byte) 0x33, (byte) 0x39, (byte) 0x45,

				(byte) 0x30, (byte) 0x43, (byte) 0x34, (byte) 0x45, (byte) 0x34, (byte) 0x38, (byte) 0x42, (byte) 0x34,
				(byte) 0x41, (byte) 0x33, (byte) 0x39, (byte) 0x45,

				(byte) 0x30, (byte) 0x43, (byte) 0x34, (byte) 0x45, (byte) 0x34, (byte) 0x38, (byte) 0x42, (byte) 0x34,
				(byte) 0x41, (byte) 0x33, (byte) 0x39, (byte) 0x45,

				(byte) 0x30, (byte) 0x43, (byte) 0x34, (byte) 0x45, (byte) 0x34, (byte) 0x38, (byte) 0x42, (byte) 0x34,
				(byte) 0x41, (byte) 0x33, (byte) 0x39, (byte) 0x45,

				(byte) 0x30, (byte) 0x43, (byte) 0x34, (byte) 0x45, (byte) 0x34, (byte) 0x38, (byte) 0x42, (byte) 0x34,
				(byte) 0x41, (byte) 0x33, (byte) 0x39, (byte) 0x45,

				(byte) 0x30, (byte) 0x43, (byte) 0x34, (byte) 0x45, (byte) 0x34, (byte) 0x38, (byte) 0x42, (byte) 0x34,
				(byte) 0x41, (byte) 0x33, (byte) 0x39, (byte) 0x45,

				(byte) 0x35, (byte) 0x46, (byte) 0x35, (byte) 0x33, (byte) 0x39, (byte) 0x34, (byte) 0x45, (byte) 0x36,
				(byte) 0x30, (byte) 0x36,

				(byte) 0x30, (byte) 0x31, (byte) 0x39, (byte) 0x34, (byte) 0x45, (byte) 0x36,

				(byte) 0x30, (byte) 0x31, (byte) 0x39, (byte) 0x34, (byte) 0x45, (byte) 0x36,

				(byte) 0x30, (byte) 0x31, (byte) 0x39, (byte) 0x34, (byte) 0x45, (byte) 0x36,

				(byte) 0x30, (byte) 0x31, (byte) 0x39, (byte) 0x34, (byte) 0x45, (byte) 0x36,

				(byte) 0x30, (byte) 0x31, (byte) 0x39, (byte) 0x34, (byte) 0x45, (byte) 0x36,

				(byte) 0x30, (byte) 0x31, (byte) 0x39, (byte) 0x34, (byte) 0x45, (byte) 0x36,

				(byte) 0x30, (byte) 0x31, (byte) 0x41, (byte) 0x36, (byte) 0x42, (byte) 0x30,

				(byte) 0x30, (byte) 0x31, (byte) 0x41, (byte) 0x36, (byte) 0x42, (byte) 0x30,

				(byte) 0x30, (byte) 0x31, (byte) 0x41, (byte) 0x36, (byte) 0x42, (byte) 0x30,

				(byte) 0x30, (byte) 0x31, (byte) 0x41, (byte) 0x36, (byte) 0x42, (byte) 0x30,

				(byte) 0x30, (byte) 0x31, (byte) 0x41, (byte) 0x36, (byte) 0x42, (byte) 0x30,

				(byte) 0x30, (byte) 0x31, (byte) 0x41, (byte) 0x36, (byte) 0x42, (byte) 0x30,

				(byte) 0x37, (byte) 0x44, (byte) 0x31, (byte) 0x34, (byte) 0x37, (byte) 0x44, (byte) 0x31, (byte) 0x34,
				(byte) 0x37, (byte) 0x44, (byte) 0x31, (byte) 0x34, (byte) 0x37, (byte) 0x44, (byte) 0x31, (byte) 0x34,
				(byte) 0x37, (byte) 0x44, (byte) 0x31, (byte) 0x34, (byte) 0x37, (byte) 0x44, (byte) 0x31, (byte) 0x34,

				(byte) 0x37, (byte) 0x44, (byte) 0x31, (byte) 0x34, (byte) 0x37, (byte) 0x44, (byte) 0x31, (byte) 0x34,
				(byte) 0x37, (byte) 0x44, (byte) 0x31, (byte) 0x34, (byte) 0x37, (byte) 0x44, (byte) 0x31, (byte) 0x34,
				(byte) 0x37, (byte) 0x44, (byte) 0x31, (byte) 0x34, (byte) 0x37, (byte) 0x44, (byte) 0x31, (byte) 0x34,

				(byte) 0x37, (byte) 0x44, (byte) 0x31, (byte) 0x34, (byte) 0x37, (byte) 0x44, (byte) 0x31, (byte) 0x34,
				(byte) 0x37, (byte) 0x44, (byte) 0x31, (byte) 0x34, (byte) 0x37, (byte) 0x44, (byte) 0x31, (byte) 0x34,
				(byte) 0x37, (byte) 0x44, (byte) 0x31, (byte) 0x34, (byte) 0x37, (byte) 0x44, (byte) 0x31, (byte) 0x34,

				(byte) 0x37, (byte) 0x44, (byte) 0x31, (byte) 0x34, (byte) 0x37, (byte) 0x44, (byte) 0x31, (byte) 0x34,
				(byte) 0x37, (byte) 0x44, (byte) 0x31, (byte) 0x34, (byte) 0x37, (byte) 0x44, (byte) 0x31, (byte) 0x34,
				(byte) 0x37, (byte) 0x44, (byte) 0x31, (byte) 0x34, (byte) 0x37, (byte) 0x44, (byte) 0x31, (byte) 0x34,

				(byte) 0x43, (byte) 0x35, (byte) 0x46, (byte) 0x46,

				(byte) 0x0D };
		return bt;
	}

	public byte[] getWarn() {
		byte[] bt = { (byte) 0x7E, (byte) 0x32, (byte) 0x30, (byte) 0x30, (byte) 0x31, (byte) 0x34, (byte) 0x37,
				(byte) 0x34, (byte) 0x34, (byte) 0x45, (byte) 0x30, (byte) 0x30, (byte) 0x32, (byte) 0x46, (byte) 0x46,
				(byte) 0x46, (byte) 0x44, (byte) 0x30, (byte) 0x37, (byte) 0x0D };
		return bt;
	}

	public byte[] xyWarn() {
		byte[] bt = { (byte) 0x7E, (byte) 0x32, (byte) 0x30, (byte) 0x30, (byte) 0x31, (byte) 0x34, (byte) 0x37,
				(byte) 0x30, (byte) 0x30, (byte) 0x36, (byte) 0x30, (byte) 0x32, (byte) 0x38, (byte) 0x31, (byte) 0x31,
				(byte) 0x42, (byte) 0x46, (byte) 0x46, (byte) 0x46, (byte) 0x31, (byte) 0x46, (byte) 0x42, (byte) 0x46,
				(byte) 0x46, (byte) 0x46, (byte) 0x31, (byte) 0x46, (byte) 0x42, (byte) 0x46, (byte) 0x46, (byte) 0x46,
				(byte) 0x31, (byte) 0x46, (byte) 0x42, (byte) 0x46, (byte) 0x46, (byte) 0x46, (byte) 0x31, (byte) 0x46,
				(byte) 0x42, (byte) 0x46, (byte) 0x46, (byte) 0x46, (byte) 0x31, (byte) 0x46, (byte) 0x42, (byte) 0x46,
				(byte) 0x46, (byte) 0x46, (byte) 0x31, (byte) 0x46, (byte) 0x42, (byte) 0x46, (byte) 0x46, (byte) 0x33,
				(byte) 0x37, (byte) 0x36, (byte) 0x0D };
		return bt;
	}
}
